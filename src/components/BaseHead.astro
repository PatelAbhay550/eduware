---
// Import the global.css file here so that it is included on
// all pages through the use of the <BaseHead /> component.
import '../styles/global.css';
import { SITE_TITLE, SITE_DESCRIPTION, SITE_URL, SITE_AUTHOR } from '../consts';
import FallbackImage from '../assets/fallback.png';
import type { ImageMetadata } from 'astro';

interface Props {
	title: string;
	description: string;
	image?: ImageMetadata;
	keywords?: string[];
	author?: string;
	publishedTime?: string;
	modifiedTime?: string;
	type?: 'website' | 'article';
	noindex?: boolean;
}

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { 
	title, 
	description, 
	image = FallbackImage, 
	keywords = [],
	author = SITE_AUTHOR,
	publishedTime,
	modifiedTime,
	type = 'website',
	noindex = false
} = Astro.props;

const fullTitle = title === SITE_TITLE ? title : `${title} | ${SITE_TITLE}`;
const imageUrl = new URL(image.src, Astro.url);
---

<!-- Global Metadata -->
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width,initial-scale=1" />
<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
<link rel="sitemap" href="/sitemap-index.xml" />
<link
	rel="alternate"
	type="application/rss+xml"
	title={SITE_TITLE}
	href={new URL('rss.xml', Astro.site)}
/>
<meta name="generator" content={Astro.generator} />

<!-- SEO Meta Tags -->
{noindex && <meta name="robots" content="noindex, nofollow" />}
{!noindex && <meta name="robots" content="index, follow" />}

<!-- Font preloads -->
<link rel="preload" href="/fonts/atkinson-regular.woff" as="font" type="font/woff" crossorigin />
<link rel="preload" href="/fonts/atkinson-bold.woff" as="font" type="font/woff" crossorigin />

<!-- Canonical URL -->
<link rel="canonical" href={canonicalURL} />

<!-- Primary Meta Tags -->
<title>{fullTitle}</title>
<meta name="title" content={fullTitle} />
<meta name="description" content={description} />
<meta name="author" content={author} />
{keywords.length > 0 && <meta name="keywords" content={keywords.join(', ')} />}

<!-- Open Graph / Facebook -->
<meta property="og:type" content={type} />
<meta property="og:url" content={canonicalURL} />
<meta property="og:title" content={fullTitle} />
<meta property="og:description" content={description} />
<meta property="og:image" content={imageUrl} />
<meta property="og:image:alt" content={title} />
<meta property="og:site_name" content={SITE_TITLE} />
<meta property="og:locale" content="en_US" />
{publishedTime && <meta property="article:published_time" content={publishedTime} />}
{modifiedTime && <meta property="article:modified_time" content={modifiedTime} />}
{author && <meta property="article:author" content={author} />}

<!-- Twitter -->
<meta name="twitter:card" content="summary_large_image" />
<meta name="twitter:url" content={canonicalURL} />
<meta name="twitter:title" content={fullTitle} />
<meta name="twitter:description" content={description} />
<meta name="twitter:image" content={imageUrl} />
<meta name="twitter:image:alt" content={title} />
<meta name="twitter:site" content="@eduware" />
<meta name="twitter:creator" content="@eduware" />

<!-- Additional SEO -->
<meta name="theme-color" content="#3b82f6" />
<meta name="msapplication-TileColor" content="#3b82f6" />

<!-- Schema.org JSON-LD -->
<script type="application/ld+json" set:html={JSON.stringify({
  "@context": "https://schema.org",
  "@type": type === 'article' ? 'Article' : 'WebSite',
  "name": fullTitle,
  "description": description,
  "url": canonicalURL.toString(),
  "image": imageUrl.toString(),
  "author": {
    "@type": "Organization",
    "name": author
  },
  "publisher": {
    "@type": "Organization",
    "name": SITE_TITLE,
    "logo": {
      "@type": "ImageObject",
      "url": new URL('/logo_main.svg', Astro.site).toString()
    }
  },
  ...(publishedTime && { "datePublished": publishedTime }),
  ...(modifiedTime && { "dateModified": modifiedTime })
})}>
</script>
